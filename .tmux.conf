# check man tmux to learn more

#set -g default-terminal "screen-256color"
#set -g default-terminal "tmux-256color"
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",*256col*:Tc"


# bind command prefix + r to quik reload ~/.tmux.conf and display "Reloaded" on tmux terminal
# semicolon ; between two commands let you combine multiple tmux commands
bind r source-file ~/.tmux.conf \; display "Reloaded!"


# Some configs won't take place even after you reload the config file.
# Usually these are the UI-related commands.
# If you don't see your changes after reloading the tmux config, you need to restart the tmux server:
# 1. Detach from the session (Prefix + d)
# 2. Kill the server (tmux kill-server)
# 3. Start a new session (tmux new -s MY_SESSION)
# Alternatively, you can also run Prefix + I (note the I is uppercased) to reload tmux environment.
# In short, if running Prefix + r doesn't do anything, try running Prefix + I or restart your server


# Change the Default Prefix map bindings
unbind C-b # unbinding Ctrl + b key
#unbind C-Space
set -g prefix C-Space # change prefix
bind C-Space send-prefix # bind .... send-prefix allows Ctrl + t to perform the send-prefix command. The send-prefix command sends the prefix keystroke to a window


# Enable mouse usage
set -g mouse on

# No delay for escape key press
set -sg escape-time 0
set -g status-keys vi

# Increase Window History
# By default, tmux keeps the previous 2000 lines of window history
set-option -g history-limit 10000

# Jump to Marked Pane like VIM
# To mark a Pane, press Prefix + m
# To jump to a mark, press Prefix + ` as bound below
# To remove a mark, press Prefix + m again while you're on that marked pane or just press Prefix + M anywhere.
# Unlike VIM, tmux can only mark one pane
bind \` switch-client -t'{marked}'


# Numbering Windows and Panes from 0-based to 1-based (make them start with 1)
set -g base-index 1
setw -g pane-base-index 1

# Automatic renumbering windows so vacant window numbered within numbers doesn't get made
set -g renumber-windows on

# Automatically set window titles so you know what's going on
set-window-option -g automatic-rename on
set-option -g set-titles on

# Swapping Windows
bind -r "<" swap-window -d -t -1
bind -r ">" swap-window -d -t +1

# Split Window key bindings
bind-key "|" split-window -h -c "#{pane_current_path}"
bind-key "\\" split-window -fh -c "#{pane_current_path}"

bind-key "-" split-window -v -c "#{pane_current_path}"
bind-key "_" split-window -fv -c "#{pane_current_path}"


# Keeping Current Path when creating a new window
bind c new-window -c "#{pane_current_path}"


# Resizing Panes
# Prefix + Ctrl-h/j/k/l
bind -r C-j resize-pane -D 5
bind -r C-k resize-pane -U 5
bind -r C-h resize-pane -L 5
bind -r C-l resize-pane -R 5

# Switching Pane like VIM
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l


# Breaking and Joining Panes
# Maybe you are on a window with multiple panes and you want to break the current pane out into its own window.
# To do this, tmux has a built-in break-pane command: Prefix + !

# Conversely, what if you want to join a pane from another window into a different window? There is no native keybindings, but tmux has a join-pane command.
# bind j choose-window 'join-pane -h -s "%%"'
# bind J choose-window 'join-pane -s "%%"'

# Disable Confirmation prompt on kill window and kill pane
bind-key & kill-window
bind-key x kill-pane

# ========================================================
# =             Plugin Settings                          =
# ========================================================

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'
run '~/.tmux/plugins/tpm/tpm'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
